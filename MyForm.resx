<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>